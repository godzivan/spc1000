/****************************************************/
/* txt2bas                                          */
/* p6code.h                                         */
/* 2000.03.26. by ishioka                           */
/* 2000.03.28.                                      */
/****************************************************/

enum {
	CODE_REMA		= 0x3A,
	CODE_MULTIFLY   = 0xFD,
	CODE_MINUS      = 0xF9,
	CODE_SLASH      = 0xFC,
	CODE_UPPER      = 0xFE,
	CODE_BACKSLASH  = 0xFB,
	CODE_PLUS       = 0xF8,
	CODE_LT         = 0xF7,
	CODE_LEQ        = 0xF3,
	CODE_NEQ        = 0xF0,
	CODE_EQ         = 0xF5,
	CODE_EQL        = 0xF1,
	CODE_EQM        = 0xF2,
	CODE_MORE       = 0xF6,
	CODE_DIFF       = 0xEF,
	CODE_MEQ        = 0xF4,
	CODE_ABS        = 0x82,
	CODE_AND        = 0xED,
	CODE_ASC        = 0xA9,
	CODE_ATN        = 0x8B,
	CODE_AUTO       = 0x88,
	CODE_BEEP       = 0xA4,
	CODE_CALL       = 0xB9,
	CODE_CDBL       = 0x92,
	CODE_CHAR       = 0xA0,
	CODE_CINT       = 0x94,
	CODE_CIRCLE     = 0xCB,
	CODE_CLEAR      = 0x97,
	CODE_CLOSE      = 0xCF,
	CODE_CLS        = 0x96,
	CODE_COLOR      = 0xC6,
	CODE_CONT       = 0x95,
	CODE_COS        = 0x84,
	CODE_CSNG       = 0x93,
	CODE_CSRLIN     = 0xC1,
	CODE_DATA       = 0x8F,
	CODE_DEF        = 0xA9,
	CODE_DEFDBL     = 0xA7,
	CODE_DEFINT     = 0xA5,
	CODE_DEFSNG     = 0xA6,
	CODE_DEFSTR     = 0xA8,
	CODE_DELETE     = 0x89,
	CODE_DIM        = 0x91,
	CODE_DUMP       = 0xAA,
	CODE_EDIT       = 0x93,
	CODE_ELSE       = 0xB8,
	CODE_END        = 0xA2,
	CODE_ERL        = 0xC0,
	CODE_ERR        = 0xBF,
	CODE_ERROR      = 0xB5,
	CODE_EXP        = 0x87,
	CODE_FAC        = 0x9C,
	CODE_FIX        = 0x8E,
	CODE_FN         = 0xBD,
	CODE_FOR        = 0x8A,
	CODE_FRAC       = 0x8D,
	CODE_FRE        = 0xB7,
	CODE_GCINIT     = 0xC9,
	CODE_GOSUB      = 0x82,
	CODE_GOTO       = 0x81,
	CODE_HCOPY      = 0xBD,
	CODE_HEX        = 0xA2,
	CODE_IF         = 0x8E,
	CODE_INKEY      = 0xB5,
	CODE_INP        = 0x91,
	CODE_INPUT      = 0x8D,
	CODE_INSTR      = 0xB6,
	CODE_INT        = 0x81,
	CODE_KEY        = 0xBE,
	CODE_LABEL      = 0xC2,
	CODE_LEFTS      = 0xB2,
	CODE_LEN        = 0xAA,
	CODE_LET        = 0x99,
	CODE_LINE       = 0xC5,
	CODE_LIST       = 0x86,
	CODE_LLIST      = 0x87,
	CODE_LOAD       = 0xAB,
	CODE_LOCATE     = 0xBA,
	CODE_LOG        = 0x86,
	CODE_LPOS       = 0x9B,
	CODE_MEN        = 0xB8,
	CODE_MERGE      = 0xAD,
	CODE_MID        = 0xB4,
	CODE_MOD        = 0xFA,
	CODE_MON        = 0xBC,
	CODE_NEW        = 0x9A,
	CODE_NEXT       = 0x8B,
	CODE_NOT        = 0xEE,
	CODE_OCT        = 0xA3,
	CODE_OFF        = 0x9C,
	CODE_ON         = 0x98,
	CODE_OR         = 0xEC,
	CODE_OUT        = 0xAF,
	CODE_PAI        = 0x8F,
	CODE_PAINT      = 0xCC,
	CODE_PAR        = 0xB0,
	CODE_PATTERN    = 0xCA,
	CODE_PEEK       = 0x8A,
	CODE_PLAY       = 0xA3,
	CODE_POKE       = 0x9B,
	CODE_POP        = 0xC0,
	CODE_POS        = 0x9A,
	CODE_PRESET     = 0xC8,
	CODE_PRINT      = 0x8C,
	CODE_PSET       = 0xC7,
	CODE_PUSH       = 0xBF,
	CODE_RAD        = 0x90,
	CODE_READ       = 0x90,
	CODE_REM        = 0x92,
	CODE_RENUM      = 0xB7,
	CODE_REPEAT     = 0x9F,
	CODE_RESTORE    = 0x85,
	CODE_RESUME     = 0xB6,
	CODE_RETURN     = 0x84,
	CODE_RIGHT      = 0xB3,
	CODE_RND        = 0x89,
	CODE_ROPEN      = 0xCD,
	CODE_RUN        = 0x83,
	CODE_SAVE       = 0xAC,
	CODE_SCREEN     = 0xC4,
	CODE_SCRN       = 0xB9,
	CODE_SEARCH     = 0xB0,
	CODE_SGN        = 0x8C,
	CODE_SIN        = 0x83,
	CODE_SOUND      = 0xB1,
	CODE_SPACE      = 0xA7,
	CODE_SPC        = 0xE8,
	CODE_SQR        = 0x88,
	CODE_STEP       = 0xE0,
	CODE_STOP       = 0x94,
	CODE_STR        = 0xA1,
	CODE_STRING     = 0xBB,
	CODE_SUM        = 0x9D,
	CODE_SWAP       = 0xB3,
	CODE_TAB        = 0xE7,
	CODE_TAN        = 0x85,
	CODE_THEN       = 0xE1,
	CODE_TO         = 0xDF,
	CODE_TRACE      = 0xA1,
	CODE_UNTIL      = 0xA0,
	CODE_USING      = 0xE2,
	CODE_USR        = 0xBE,
	CODE_VAL        = 0xAB,
	CODE_VARPTR     = 0xBA,
	CODE_WEND       = 0x9E,
	CODE_WHILE      = 0x9D,
	CODE_WOPEN      = 0xCE,
	CODE_XOR        = 0xEB,
	CODE_QUOTE      = '\"'
};

// type 0 - command, type 1 - function

spc1kcode spc1kcodelist[] = {
	{ "'"         , 0, 0x3A },
	{ "*"         , 0, 0xFD },
	{ "-"         , 0, 0xF9 },
	{ "/"         , 0, 0xFC },
	{ "?"         , 0, 0x8C },
	{ "^"         , 0, 0xFE },
	{ "\\"        , 0, 0xFB },
	{ "+"         , 0, 0xF8 },
	{ "<>"        , 0, 0xF0 },
	{ "<="        , 0, 0xF3 },
	{ "<"         , 0, 0xF7 },
	{ "=<"        , 0, 0xF1 },
	{ "=>"        , 0, 0xF2 },
	{ "="         , 0, 0xF5 },
	{ "><"        , 0, 0xEF },
	{ ">="        , 0, 0xF4 },
	{ ">"         , 0, 0xF6 },
	{ "ABS"       , 1, 0x82 },
	{ "AND"       , 0, 0xED },
	{ "ASC"       , 1, 0xA9 },
	{ "ATN"       , 1, 0x8B },
	{ "AUTO"      , 0, 0x88 },
	{ "BEEP"      , 0, 0xA4 },
	{ "CALL"      , 0, 0xB9 },
	{ "CDBL"      , 1, 0x92 },
	{ "CGINIT"    , 0, 0xC9 },
	{ "CHR$"      , 1, 0xA0 },
	{ "CINT"      , 1, 0x94 },
	{ "CIRCLE"    , 0, 0xCB },
	{ "CLEAR"     , 0, 0x97 },
	{ "CLOSE"     , 0, 0xCF },
	{ "CLS"       , 0, 0x96 },
	{ "COLOR"     , 0, 0xC6 },
	{ "CONT"      , 0, 0x95 },
	{ "COS"       , 1, 0x84 },
	{ "CSNG"      , 1, 0x93 },
	{ "CSRLIN"    , 1, 0xC1 },
	{ "DATA"      , 0, 0x8F },
	{ "DEFDBL"    , 0, 0xA7 },
	{ "DEFINT"    , 0, 0xA5 },
	{ "DEFSNG"    , 0, 0xA6 },
	{ "DEFSTR"    , 0, 0xA8 },
	{ "DELETE"    , 0, 0x89 },
	{ "DEF"       , 0, 0xA9 },
	{ "DIM"       , 0, 0x91 },
	{ "DUMP"      , 0, 0xAA },
	{ "EDIT"      , 0, 0x93 },
	{ "ELSE"      , 0, 0xB8 },
	{ "END"       , 0, 0xA2 },
	{ "ERL"       , 1, 0xC0 },
	{ "ERROR"     , 0, 0xB5 },
	{ "ERR"       , 1, 0xBF },
	{ "EXP"       , 1, 0x87 },
	{ "FAC"       , 1, 0x9C },
	{ "FIX"       , 1, 0x8E },
	{ "FN"        , 1, 0xBD },
	{ "FOR"       , 0, 0x8A },
	{ "FRAC"      , 1, 0x8D },
	{ "FRE"       , 1, 0xB7 },
	{ "GOSUB"     , 0, 0x82 },
	{ "GOTO"      , 0, 0x81 },
	{ "HCOPY"     , 0, 0xBD },
	{ "HEX$"      , 1, 0xA2 },
	{ "IF"        , 0, 0x8E },
	{ "INKEY$"    , 1, 0xB5 },
	{ "INPUT"     , 0, 0x8D },
	{ "INP"       , 1, 0x91 },
	{ "INSTR"     , 1, 0xB6 },
	{ "INT"       , 1, 0x81 },
	{ "KEY"       , 0, 0xBE },
	{ "LABEL"     , 0, 0xC2 },
	{ "LEFT$"     , 1, 0xB2 },
	{ "LEN"       , 1, 0xAA },
	{ "LET"       , 0, 0x99 },
	{ "LINE"      , 0, 0xC5 },
	{ "LIST#1"    , 0, 0x87 },
	{ "LIST"      , 0, 0x86 },
	{ "LOAD"      , 0, 0xAB },
	{ "LOCATE"    , 0, 0xBA },
	{ "LOG"       , 1, 0x86 },
	{ "LPOS"      , 1, 0x9B },
	{ "MEN$"      , 1, 0xB8 },
	{ "MERGE"     , 0, 0xAD },
	{ "MID$"      , 1, 0xB4 },
	{ "MOD"       , 0, 0xFA },
	{ "MON"       , 0, 0xBC },
	{ "NEW"       , 0, 0x9A },
	{ "NEXT"      , 0, 0x8B },
	{ "NOT"       , 0, 0xEE },
	{ "OCT$"      , 1, 0xA3 },
	{ "OFF"       , 0, 0x9C },
	{ "ON"        , 0, 0x98 },
	{ "OR"        , 0, 0xEC },
	{ "OUT"       , 0, 0xAF },
	{ "PAINT"     , 0, 0xCC },
	{ "PAI"       , 1, 0x8F },
	{ "PAR"       , 1, 0xB0 },
	{ "PATTERN"   , 0, 0xCA },
	{ "PEEK"      , 1, 0x8A },
	{ "PLAY"      , 0, 0xA3 },
	{ "POKE"      , 0, 0x9B },
	{ "POP"       , 0, 0xC0 },
	{ "POS"       , 1, 0x9A },
	{ "PRESET"    , 0, 0xC8 },
	{ "PRINT"     , 0, 0x8C },
	{ "PSET"      , 0, 0xC7 },
	{ "PUSH"      , 0, 0xBF },
	{ "RAD"       , 1, 0x90 },
	{ "READ"      , 0, 0x90 },
	{ "REM"       , 0, 0x92 },
	{ "RENUM"     , 0, 0xB7 },
	{ "REPEAT"    , 0, 0x9F },
	{ "RESTORE"   , 0, 0x85 },
	{ "RESUME"    , 0, 0xB6 },
	{ "RETURN"    , 0, 0x84 },
	{ "RIGHT$"    , 1, 0xB3 },
	{ "RND"       , 1, 0x89 },
	{ "ROPEN"     , 0, 0xCD },
	{ "RUN"       , 0, 0x83 },
	{ "SAVE"      , 0, 0xAC },
	{ "SCREEN"    , 0, 0xC4 },
	{ "SCRN$"     , 1, 0xB9 },
	{ "SEARCH"    , 0, 0xB0 },
	{ "SGN"       , 1, 0x8C },
	{ "SIN"       , 1, 0x83 },
	{ "SOUND"     , 0, 0xB1 },
	{ "SPACE$"    , 1, 0xA7 },
	{ "SPC"       , 0, 0xE8 },
	{ "SQR"       , 1, 0x88 },
	{ "STEP"      , 0, 0xE0 },
	{ "STOP"      , 0, 0x94 },
	{ "STR$"      , 1, 0xA1 },
	{ "STRING$"   , 1, 0xBB },
	{ "SUM"       , 1, 0x9D },
	{ "SWAP"      , 0, 0xB3 },
	{ "TAB"       , 0, 0xE7 },
	{ "TAN"       , 1, 0x85 },
	{ "THEN"      , 0, 0xE1 },
	{ "TO"        , 0, 0xDF },
	{ "TRACE"     , 0, 0xA1 },
	{ "UNTIL"     , 0, 0xA0 },
	{ "USING"     , 0, 0xE2 },
	{ "USR"       , 1, 0xBE },
	{ "VAL"       , 1, 0xAB },
	{ "VARPTR"    , 1, 0xBA },
	{ "WEND"      , 0, 0x9E },
	{ "WHILE"     , 0, 0x9D },
	{ "WOPEN"     , 0, 0xCE },
	{ "XOR"       , 0, 0xEB }
};
